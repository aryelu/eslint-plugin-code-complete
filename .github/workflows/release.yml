name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm run test

      - name: Run lint
        run: pnpm run lint

      - name: Build
        run: pnpm run build

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          pnpm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "OLD_VERSION=$OLD_VERSION" >> $GITHUB_ENV
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update CHANGELOG
        run: |
          TODAY=$(date +%Y-%m-%d)
          sed -i "1s/^/# Changelog\n\n## [$NEW_VERSION] - $TODAY\n\n### Changed\n- Version bump to $NEW_VERSION\n\n/" CHANGELOG.md

      - name: Commit and push changes
        run: |
          git add package.json CHANGELOG.md
          git commit -m "chore: bump version to $NEW_VERSION"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            ## Changes in v${{ env.NEW_VERSION }}

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

            ### Installation
            ```bash
            npm install eslint-plugin-code-complete@${{ env.NEW_VERSION }}
            ```
          draft: false
          prerelease: false